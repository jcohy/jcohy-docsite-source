{
  "filename": "JMH.md",
  "__html": "<h2>微基准套件</h2>\n<h3>何为JMH?</h3>\n<p>JMH，即Java Microbenchmark Harness，是专门用于代码微基准测试的工具套件。何谓Micro Benchmark呢？简单的来说就是基于方法层面的基准测试，精度可以达到微秒级。当你定位到热点方法，希望进一步优化方法性能的时候，就可以使用JMH对优化的结果进行量化的分析。</p>\n<h3>JMH比较典型的应用场景：</h3>\n<ul>\n<li>想准确的知道某个方法需要执行多长时间，以及执行时间和输入之间的相关性；</li>\n<li>对比接口不同实现在给定条件下的吞吐量；</li>\n<li>查看多少百分比的请求在多长时间内完成；</li>\n</ul>\n<h3>JMH的使用</h3>\n<p>要使用JMH，首先需要准备好Maven环境，JMH的源代码以及官方提供的Sample就是使用Maven进行项目管理的，github上也有使用gradle的例子可自行搜索参考。使用mvn命令行创建一个JMH工程：</p>\n<pre><code class=\"language-java\">mvn archetype:generate \\\n\t-DinteractiveMode=<span class=\"hljs-keyword\">false</span> \\\n\t-DarchetypeGroupId=org.openjdk.jmh \\\n\t-DarchetypeArtifactId=jmh-java-benchmark-archetype \\\n\t-DgroupId=co.speedar.infra \\\n\t-DartifactId=jmh-test \\\n\t-Dversion=<span class=\"hljs-number\">1.0</span>\n</code></pre>\n<p>如果要在现有Maven项目中使用JMH，只需要把生成出来的两个依赖以及shade插件拷贝到项目的pom中即可：</p>\n<pre><code class=\"language-maven\">        &lt;dependency&gt;\n            &lt;groupId&gt;org.openjdk.jmh&lt;/groupId&gt;\n            &lt;artifactId&gt;jmh-core&lt;/artifactId&gt;\n            &lt;version&gt;0.7.1&lt;/version&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.openjdk.jmh&lt;/groupId&gt;\n            &lt;artifactId&gt;jmh-generator-annprocess&lt;/artifactId&gt;\n            &lt;version&gt;0.7.1&lt;/version&gt;\n            &lt;scope&gt;provided&lt;/scope&gt;\n        &lt;/dependency&gt;\n        ...\n        &lt;plugin&gt;\n            &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;\n            &lt;artifactId&gt;maven-shade-plugin&lt;/artifactId&gt;\n            &lt;version&gt;2.0&lt;/version&gt;\n            &lt;executions&gt;\n                &lt;execution&gt;\n                    &lt;phase&gt;package&lt;/phase&gt;\n                    &lt;goals&gt;\n                        &lt;goal&gt;shade&lt;/goal&gt;\n                    &lt;/goals&gt;\n                    &lt;configuration&gt;\n                        &lt;finalName&gt;microbenchmarks&lt;/finalName&gt;\n                        &lt;transformers&gt;\n                            &lt;transformer\n                                    implementation=&quot;org.apache.maven.plugins.shade.resource.ManifestResourceTransformer&quot;&gt;\n                                &lt;mainClass&gt;org.openjdk.jmh.Main&lt;/mainClass&gt;\n                            &lt;/transformer&gt;\n                        &lt;/transformers&gt;\n                    &lt;/configuration&gt;\n                &lt;/execution&gt;\n            &lt;/executions&gt;\n        &lt;/plugin&gt;\n</code></pre>\n<h3>新特性的说明</h3>\n<p>Java 12 中添加一套新的基本的微基准测试套件（microbenchmarks suite），此功能为JDK源代码添加了一套微基准测试（大约100个），简化了现有微基准测试的运行和新基准测试的创建过程。使开发人员可以轻松运行现有的微基准测试并创建新的基准测试，其目标在于提供一个稳定且优化过的基准。 它基于Java Microbenchmark Harness（JMH），可以轻松测试JDK性能，支持JMH更新。</p>\n<p>微基准套件与 JDK 源代码位于同一个目录中，并且在构建后将生成单个 jar 文件。但它是一个单独的项目，在支持构建期间不会执行，以方便开发人员和其他对构建微基准套件不感兴趣的人在构建时花费比较少的构建时间。</p>\n<p>要构建微基准套件，用户需要运行命令：make build-microbenchmark， 类似的命令还有：make test TEST=&quot;micro:java.lang.invoke&quot; 将使用默认设置运行 java.lang.invoke 相关的微基准测试。</p>\n",
  "link": "\\zh-cn\\docs\\java\\java12\\JMH.html",
  "meta": {
    "title": "微基准套件",
    "keywords": "docs,jcohy-docs,微基准套件，java12",
    "description": "微基准套件"
  }
}