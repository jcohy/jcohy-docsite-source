{
  "filename": "IO.md",
  "__html": "<h2>I/O 流新特性</h2>\n<p>类 java.io.InputStream 中增加了新的方法来读取和复制 InputStream 中包含的数据。</p>\n<ul>\n<li>readAllBytes：读取 InputStream 中的所有剩余字节。</li>\n<li>readNBytes： 从 InputStream 中读取指定数量的字节到数组中。</li>\n<li>transferTo：读取 InputStream 中的全部字节并写入到指定的 OutputStream 中 。\n如下代码中给出了这些新方法的使用示例。</li>\n</ul>\n<pre><code class=\"language-java\">public class TestInputStream {\n    private InputStream inputStream; \n    private static final String CONTENT = \"Hello World\"; \n    @Before \n    public void setUp() throws Exception { \n        this.inputStream = \n            TestInputStream.class.getResourceAsStream(\"/input.txt\"); \n    }\n    @Test \n    public void testReadAllBytes() throws Exception { \n        final String content = new String(this.inputStream.readAllBytes()); \n        assertEquals(CONTENT, content); \n    } \n    @Test \n    public void testReadNBytes() throws Exception { \n        final byte[] data = new byte[5]; \n        this.inputStream.readNBytes(data, 0, 5); \n        assertEquals(\"Hello\", new String(data)); \n    } \n    @Test \n    public void testTransferTo() throws Exception { \n        final ByteArrayOutputStream outputStream = new ByteArrayOutputStream(); \n        this.inputStream.transferTo(outputStream); \n        assertEquals(CONTENT, outputStream.toString()); \n    } \n}\n</code></pre>\n<p>ObjectInputFilter 可以对 ObjectInputStream 中 包含的内容进行检查，来确保其中包含的数据是合法的。可以使用 ObjectInputStream 的方法 setObjectInputFilter 来设置。ObjectInputFilter 在 进行检查时，可以检查如对象图的最大深度、对象引用的最大数量、输入流中的最大字节数和数组的最大长度等限制，也可以对包含的类的名称进行限制。</p>\n",
  "link": "\\zh-cn\\docs\\java\\java9\\IO.html",
  "meta": {
    "title": "I/O 流新特性",
    "keywords": "docs,jcohy-docs,java9,I/O 流新特性",
    "description": "I/O 流新特性"
  }
}