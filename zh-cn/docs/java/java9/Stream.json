{
  "filename": "Stream.md",
  "__html": "<h2>增强的StreamAPI</h2>\n<p>Stream 中增加了新的方法 ofNullable、dropWhile、takeWhile 和 iterate。在 如下代码中，流中包含了从 1 到 5 的 元素。断言检查元素是否为奇数。第一个元素 1 被删除，结果流中包含 4 个元素。</p>\n<pre><code class=\"language-java\"><span class=\"hljs-meta\">@Test</span> \n<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">testDropWhile</span><span class=\"hljs-params\">()</span> <span class=\"hljs-keyword\">throws</span> Exception </span>{ \n    <span class=\"hljs-keyword\">final</span> <span class=\"hljs-keyword\">long</span> count = Stream.of(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">5</span>) \n        .dropWhile(i -&gt; i % <span class=\"hljs-number\">2</span> != <span class=\"hljs-number\">0</span>) \n        .count(); \n    assertEquals(<span class=\"hljs-number\">4</span>, count); \n}\n</code></pre>\n<p>Collectors 中增加了新的方法 filtering 和 flatMapping。在 如下代码中，对于输入的 String 流 ，先通过 flatMapping 把 String 映射成 Integer 流 ，再把所有的 Integer 收集到一个集合中。</p>\n<pre><code class=\"language-java\"><span class=\"hljs-meta\">@Test</span> \n<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">testFlatMapping</span><span class=\"hljs-params\">()</span> <span class=\"hljs-keyword\">throws</span> Exception </span>{ \n    <span class=\"hljs-keyword\">final</span> Set&lt;Integer&gt; result = Stream.of(<span class=\"hljs-string\">\"a\"</span>, <span class=\"hljs-string\">\"ab\"</span>, <span class=\"hljs-string\">\"abc\"</span>) \n        .collect(Collectors.flatMapping(v -&gt; v.chars().boxed(), \n            Collectors.toSet())); \n    assertEquals(<span class=\"hljs-number\">3</span>, result.size()); \n}\n</code></pre>\n<p>Optiona l 类中新增了 ifPresentOrElse、or 和 stream 等方法。在 如下代码中，Optiona l 流中包含 3 个 元素，其中只有 2 个有值。在使用 flatMap 之后，结果流中包含了 2 个值。</p>\n<pre><code class=\"language-java\"><span class=\"hljs-meta\">@Test</span> \n<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">testStream</span><span class=\"hljs-params\">()</span> <span class=\"hljs-keyword\">throws</span> Exception </span>{ \n    <span class=\"hljs-keyword\">final</span> <span class=\"hljs-keyword\">long</span> count = Stream.of( \n        Optional.of(<span class=\"hljs-number\">1</span>), \n        Optional.empty(), \n        Optional.of(<span class=\"hljs-number\">2</span>) \n    ).flatMap(Optional::stream) \n        .count(); \n    assertEquals(<span class=\"hljs-number\">2</span>, count); \n}\n</code></pre>\n",
  "link": "\\zh-cn\\docs\\java\\java9\\Stream.html",
  "meta": {
    "title": "增强的StreamAPI",
    "keywords": "docs,jcohy-docs,java9,增强的StreamAPI",
    "description": "增强的StreamAPI"
  }
}