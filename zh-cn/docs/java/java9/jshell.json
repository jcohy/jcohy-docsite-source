{
  "filename": "jshell.md",
  "__html": "<h2>Jshell</h2>\n<h3>官方Feature</h3>\n<ul>\n<li>222: jshell: The Java Shell (Read-Eval-Print Loop)</li>\n</ul>\n<blockquote>\n<p>jshell 是 Java 9 新增的一个实用工具。jshell 为 Java 增加了类似 NodeJS 和 Python 中的读取-求值-打印循环（ Read-Evaluation-Print Loop ） 。 在 jshell 中 可以直接 输入表达式并查看其执行结果。当需要测试一个方法的运行效果，或是快速的对表达式进行求值时，jshell 都非常实用。只需要通过 jshell 命令启动 jshell，然后直接输入表达式即可。每个表达式的结果会被自动保存下来 ，以数字编号作为引用，类似 $1 和$2 这样的名称 。可以在后续的表达式中引用之前语句的运行结果。 在 jshell 中 ，除了表达式之外，还可以创建 Java 类和方法。jshell 也有基本的代码完成功能。</p>\n</blockquote>\n<h3>使用举例</h3>\n<p>1、调出jshell</p>\n<pre><code class=\"language-shell\">jshell\n</code></pre>\n<p>2、获取帮助</p>\n<pre><code class=\"language-shell\"><span class=\"hljs-meta\">jshell&gt;</span><span class=\"bash\"> /<span class=\"hljs-built_in\">help</span> intro</span>\n</code></pre>\n<p>3、基本使用</p>\n<pre><code class=\"language-shell\"><span class=\"hljs-meta\">jshell&gt;</span><span class=\"bash\"> int add(int x, int y) { </span>\n    ...&gt; return x + y; \n    ...&gt; } \n | 已创建 方法 add(int,int)\n</code></pre>\n<p>接着就可以在 jshell 中直接使用这个方法</p>\n<pre><code class=\"language-shell\"><span class=\"hljs-meta\">jshell&gt;</span><span class=\"bash\"> add(1, 2) </span>\n<span class=\"hljs-meta\">$</span><span class=\"bash\">19 ==&gt; 3</span>\n</code></pre>\n<p>4、导入包</p>\n<pre><code class=\"language-shell\"><span class=\"hljs-meta\">jshell&gt;</span><span class=\"bash\"> import java.util.*</span>\n</code></pre>\n<p>5、查看默认导入的包</p>\n<pre><code class=\"language-shell\"><span class=\"hljs-meta\">jshell&gt;</span><span class=\"bash\"> /imports</span>\n</code></pre>\n<p>6、代码补全\nTAB键\n7、列出当前 session 里所有有效的代码片段</p>\n<pre><code class=\"language-shell\"><span class=\"hljs-meta\">jshell&gt;</span><span class=\"bash\"> /list</span>\n</code></pre>\n<p>8、查看当前 session 下所有创建过的变量</p>\n<pre><code class=\"language-shell\"><span class=\"hljs-meta\">jshell&gt;</span><span class=\"bash\"> /var</span>\n</code></pre>\n<p>9、查看当前 session 下所有创建过的方法</p>\n<pre><code class=\"language-shell\"><span class=\"hljs-meta\">jshell&gt;</span><span class=\"bash\"> /methods</span>\n</code></pre>\n<p>10、从外部文件加载源代码</p>\n<pre><code class=\"language-shell\"><span class=\"hljs-meta\">jshell&gt;</span><span class=\"bash\"> /open E:\\hello.java</span>\n</code></pre>\n<p>11、没有受检异常（编译时异常）</p>\n<pre><code class=\"language-shell\"><span class=\"hljs-meta\">jshell&gt;</span><span class=\"bash\"> URL url = new URL(<span class=\"hljs-string\">\"http://www.baidu.com\"</span>);</span>\nurl ==&gt; http://www.baidu.com\n</code></pre>\n<p>说明：本来应该强迫我们捕获一个IOException，但却没有出现。因为jShell在后台为我们隐藏了。\n12、退出Jshell</p>\n<pre><code class=\"language-shell\"><span class=\"hljs-meta\">jshell&gt;</span><span class=\"bash\"> /<span class=\"hljs-built_in\">exit</span></span>\n | 再见\n</code></pre>\n",
  "link": "\\zh-cn\\docs\\java\\java9\\jshell.html",
  "meta": {
    "title": "Jshell",
    "keywords": "docs,jcohy-docs,java9,jshell",
    "description": "Jshell"
  }
}